services:
  app:
    container_name: ${PROJECT_NAME}_app_${PROJECT_ENV}
    hostname: ${PROJECT_NAME}-app
    build:
      context: .
    volumes:
      - .:/var/www/html
    expose:
      - ${APP_PORT}
    environment:
      # Settings
      APP_NAME: ${APP_NAME}
      APP_ENV: ${APP_ENV}
      APP_PORT: ${APP_PORT}
      APP_KEY: ${APP_KEY}
      APP_DEBUG: ${APP_DEBUG}
      APP_TIMEZONE: ${APP_TIMEZONE}
      APP_URL: ${APP_URL}
      APP_LOCALE: ${APP_LOCALE}
      APP_FALLBACK_LOCALE: ${APP_FALLBACK_LOCALE}
      APP_FAKER_LOCALE: ${APP_FAKER_LOCALE}
      APP_MAINTENANCE_DRIVER: ${APP_MAINTENANCE_DRIVER}
      
      # PHP / security
      PHP_CLI_SERVER_WORKERS: ${PHP_CLI_SERVER_WORKERS}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS}

      # Logging
      LOG_CHANNEL: ${LOG_CHANNEL}
      LOG_STACK: ${LOG_STACK}
      LOG_DEPRECATIONS_CHANNEL: ${LOG_DEPRECATIONS_CHANNEL}
      LOG_LEVEL: ${LOG_LEVEL}

      # Database
      DB_CONNECTION: ${DB_CONNECTION}
      DB_DATABASE: ${DB_DATABASE}

      # Session
      SESSION_DRIVER: ${SESSION_DRIVER}
      SESSION_LIFETIME: ${SESSION_LIFETIME}
      SESSION_ENCRYPT: ${SESSION_ENCRYPT}
      SESSION_PATH: ${SESSION_PATH}
      SESSION_DOMAIN: ${SESSION_DOMAIN}

      # Broadcast / filesystem / queue / cache
      BROADCAST_CONNECTION: ${BROADCAST_CONNECTION}
      FILESYSTEM_DISK: ${FILESYSTEM_DISK}
      QUEUE_CONNECTION: ${QUEUE_CONNECTION}
      CACHE_STORE: ${CACHE_STORE}
      CACHE_PREFIX: ${CACHE_PREFIX}
      MEMCACHED_HOST: ${MEMCACHED_HOST}

      # Redis
      REDIS_CLIENT: ${REDIS_CLIENT}
      REDIS_HOST: ${PROJECT_NAME}-redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}

      # API
      API_VERSION: ${API_VERSION}
      API_PREFIX: ${API_PREFIX}
      
      # Frontend
      VITE_APP_NAME: ${VITE_APP_NAME}
      VITE_API_BASE_URL: ${VITE_API_BASE_URL}

      # MyAnimeList
      MAL_ACCESS_TOKEN: ${MAL_ACCESS_TOKEN}

    command: >
      sh -c "php artisan octane:start --server=swoole --host=0.0.0.0 --port=${APP_PORT}"
    networks:
      - main
      - internal
    depends_on:
      - redis

  redis:
    container_name: ${PROJECT_NAME}_redis_${PROJECT_ENV}
    hostname: ${PROJECT_NAME}-redis
    image: redis:7-alpine
    expose:
      - ${REDIS_PORT}
    volumes:
      - redis-data:/data
    networks:
      - internal

networks:
  main:
    external: true
    name: breakerino_main
  internal:
    driver: bridge

volumes:
  redis-data:
    driver: local